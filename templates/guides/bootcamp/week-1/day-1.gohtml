<div class="breadcrumbs">
  <a href="/">Go Resources</a>
  / <a href="/guides/bootcamp">Bootcamp</a>
  / <a href="/guides/bootcamp/week-1/day-1">Week 1, Day 1</a>
</div>
<div class="body container">
  <h1>Week 1, Day 1</h1>

  <h2>Videos</h2>
  <iframe width="560" height="315" src="https://www.youtube.com/embed/ZdIkbpqxK8I?list=PLH0INGR--ZGRie4wR7woSW_Coo9nOMsaj" frameborder="0" allowfullscreen></iframe>
  <ol>
    <li>Part 1 (no content)</li>
    <li><a href="https://youtu.be/nCrOuyt3fGE?list=PLH0INGR--ZGRie4wR7woSW_Coo9nOMsaj">Part 2: Introduction, Machine Setup</a></li>
    <li><a href="https://youtu.be/gxM1XErjMrc?list=PLH0INGR--ZGRie4wR7woSW_Coo9nOMsaj">Part 3: Background and Hello World</a></li>
    <li><a href="https://youtu.be/GwbZDJiRtQA?list=PLH0INGR--ZGRie4wR7woSW_Coo9nOMsaj">Part 4: Go Commands and Hello World</a></li>
    <li><a href="https://youtu.be/eR9N0b_ytO4?list=PLH0INGR--ZGRie4wR7woSW_Coo9nOMsaj">Part 5: Documentation, Variables</a></li>
    <li><a href="https://youtu.be/EaFvEfYvIAg?list=PLH0INGR--ZGRie4wR7woSW_Coo9nOMsaj">Part 6A: Variables, Constants, Scope, Imports, Whitespace</a></li>
    <li><a href="https://youtu.be/0gvKU2Y5jfw?list=PLH0INGR--ZGRie4wR7woSW_Coo9nOMsaj">Part 6B</a></li>
    <li><a href="https://youtu.be/F8nbz3SWWl8?list=PLH0INGR--ZGRie4wR7woSW_Coo9nOMsaj">Part 7: Miles to Kilometers</a></li>
    <li><a href="https://youtu.be/gh1yOouqFs0?list=PLH0INGR--ZGRie4wR7woSW_Coo9nOMsaj">Part 8: Q &amp;amp; A</a></li>
    <li><a href="https://youtu.be/_iJBYeZXjPM?list=PLH0INGR--ZGRie4wR7woSW_Coo9nOMsaj">Part 9: Types</a></li>
    <li><a href="https://youtu.be/0GIFineUxCM?list=PLH0INGR--ZGRie4wR7woSW_Coo9nOMsaj">Part 10: Types, Numbers</a></li>
    <li><a href="https://youtu.be/79-PUF8RhJk?list=PLH0INGR--ZGRie4wR7woSW_Coo9nOMsaj">Part 11: Types, Strings</a></li>
    <li><a href="https://youtu.be/JitLu0vi4b0?list=PLH0INGR--ZGRie4wR7woSW_Coo9nOMsaj">Part 12: Control Structures</a></li>
    <li><a href="https://youtu.be/lnGwLFdXmxg?list=PLH0INGR--ZGRie4wR7woSW_Coo9nOMsaj">Part 13: A Deeper Look</a></li>
  </ol>

  <h2>Outline</h2>
  <ol>
    <li>
      <h3>Machine Setup</h3>
      <ul>
        <li>Instructions: <a href="/guides/machine_setup">www.golang-book.com/guides/machine_setup</a></li>
      </ul>
    </li>
    <li>
      <h3>Hello World</h3>
      <ul>
        <li>Files &amp; Folders</li>
        <li>Terminal</li>
        <li>Text Editor</li>
        <li>Hello World</li>
        <li><code>godoc</code></li>
      </ul>
      <h4>Problems</h4>
      <ol>
        <li>Create a program which prints “Hello World” to the terminal.</li>
        <li>What is whitespace?</li>
        <li>What is a comment? What are the two ways of writing a comment?</li>
        <li>Our program began with package main. What would the files in the fmt package begin with?</li>
        <li>We used the Println function defined in the fmt package. If we wanted to use the Exit function from the os package what would we need to do?</li>
        <li>Modify the program we wrote so that instead of printing Hello World it prints Hello, my name is followed by your name.</li>
      </ol>
    </li>
    <li>
      <h3>Variables</h3>
      <ul>
        <li>Samples</li>
        <li>Blank Identifiers</li>
        <li>Short Variable Declarations</li>
        <li>Assignment</li>
        <li>Zero Values</li>
        <li>Scope</li>
        <li>Constants</li>
      </ul>
      <h4>Problems</h4>
      <ol>
        <li>Create a program which prints “Hello &lt;NAME&gt;” with &lt;NAME&gt; replaced with your name to the terminal using a variable.</li>
        <li>Use fmt.Scanf to read a user’s name and print “Hello &lt;NAME&gt;” with &lt;NAME&gt; replaced with the user’s name to the terminal.</li>
        <li>Create a program which converts:
          <ul>
            <li>Miles to Kilometers</li>
            <li>Fahrenheit to Celsius</li>
            <li>Pounds to Kilograms</li>
          </ul>
        </li>
      </ol>
    </li>
    <li>
      <h3>Types</h3>
      <ul>
        <li>Integers</li>
        <li>Floating Point Numbers</li>
        <li>Strings</li>
        <li>Booleans</li>
      </ul>
      <h4>Problems</h4>
      <ol>
        <li>How are integers stored on a computer?</li>
        <li>We know that (in base 10) the largest 1 digit number is 9 and the largest 2 digit number is 99. Given that in binary the largest 2 digit number is 11 (3), the largest 3 digit number is 111 (7) and the largest 4 digit number is 1111 (15) what's the largest 8 digit number? (hint: 10<sup>1</sup>-1 = 9 and 10<sup>2</sup>-1 = 99)</li>
        <li>Although overpowered for the task you can use Go as a calculator. Write a program that computes 32132 × 42452 and prints it to the terminal. (Use the * operator for multiplication)</li>
        <li>What is a string? How do you find its length?</li>
        <li>What's the value of the expression (true &amp;&amp; false) || (false &amp;&amp; true) || !(false &amp;&amp; false)?</li>
      </ol>
    </li>
    <li>
      <h3>A Deeper Look</h3>
      <ol>
        <li>Memory</li>
        <li>Stack vs Heap</li>
      </ol>
    </li>
    <li>
      <h3>Control Structures</h3>
      <ol>
        <li>For</li>
        <li>If</li>
        <li>Switch</li>
      </ol>
      <h4>Problems</h4>
      <ol>
        <li>Write a program that prints out all the numbers evenly divisible by 3 between 1 and 100. (3, 6, 9, etc.)</li>
        <li>Write a program that prints the numbers from 1 to 100. But for multiples of three print "Fizz" instead of the number and for the multiples of five print "Buzz". For numbers which are multiples of both three and five print "FizzBuzz".</li>
      </ol>
    </li>
  </ol>
</div>
